package swapsentences;

import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
import java.util.Scanner;

public class swapsentences{
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

      
        System.out.println("Enter a paragraph (up to 5 sentences):");
        String paragraph = scanner.nextLine();

   
        String result = processParagraph(paragraph);

    
        System.out.println("\nTransformed paragraph:");
        System.out.println(result);

        scanner.close();
    }

    private static String processParagraph(String paragraph) {
    
        String[] words = paragraph.split("\\s+");
        List<String> wordList = new ArrayList<>();
        Collections.addAll(wordList, words);

       
        System.out.println("Word lengths:");
        for (String word : wordList) {
            System.out.println(word + ": " + word.length() + " characters");
        }


        List<String> transformedWords = new ArrayList<>();
        List<String> oddLengthWords = new ArrayList<>();

        for (int i = 0; i < wordList.size(); i++) {
            String word = wordList.get(i);

        
            if (word.length() % 2 != 0) {
                oddLengthWords.add(word);
            }

         
            if (i % 2 == 0 && i + 1 < wordList.size()) {
                String currentWord = wordList.get(i);
                String nextWord = wordList.get(i + 1);

              
                String swappedWord = swapLetters(currentWord, nextWord);
                transformedWords.add(swappedWord);

            
                i++;
            } else {
             
                if (i % 2 != 0) {
                    transformedWords.add(wordList.get(i));
                }
            }
        }

    
        transformedWords.addAll(0, oddLengthWords);

       
        return String.join(" ", transformedWords);
    }

    private static String swapLetters(String word1, String word2) {
        StringBuilder swappedWord = new StringBuilder();

    
        int minLength = Math.min(word1.length(), word2.length());

   
        for (int i = 0; i < minLength; i++) {
            swappedWord.append(word2.charAt(i))
                       .append(word1.charAt(i));
        }

     
        if (word1.length() > minLength) {
            swappedWord.append(word1.substring(minLength));
        } else if (word2.length() > minLength) {
            swappedWord.append(word2.substring(minLength));
        }

        return swappedWord.toString();
    }
}
